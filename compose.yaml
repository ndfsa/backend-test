networks:
  bank_net:

services:
  db:
    build:
      context: .
      target: database
    networks:
      - bank_net
    restart: always
    ports:
      - 5432:5432
  gateway:
    build:
      context: .
      target: gateway
    networks:
      - bank_net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 100M
    ports:
      - 8080:80
  auth:
    build:
      context: .
      target: authProd
    networks:
      - bank_net
    restart: unless-stopped
    environment:
      - DB_URL=postgresql://back:root@db:5432/cardboard_bank
      - AUTH_PORT=80
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 100M
  api:
    build:
      context: .
      target: apiProd
    networks:
      - bank_net
    restart: unless-stopped
    environment:
      - DB_URL=postgresql://back:root@db:5432/cardboard_bank
      - AUTH_PORT=80
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 100M
  prometheus:
    build:
      context: .
      target: prometheus
    networks:
      - bank_net
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped
  cadvisor:
    build:
      context: .
      target: cadvisor
    networks:
      - bank_net
    command:
      - '--docker_only=true'
      - '--disable_root_cgroup_stats=true'
    volumes:
    - /:/rootfs:ro,rslave
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - "/home/${USER:?error}/.local/share/docker:/var/lib/docker:ro,rslave"
    - "/run/user/${UID:-1000}/docker.sock:/var/run/docker.sock:ro"
  grafana:
    build:
      context: .
      target: grafana
    networks:
      - bank_net
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
